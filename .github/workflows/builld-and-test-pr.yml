name: Build + test (no download)

on:
  push:
    branches:
      - main
  pull_request:
    branches: [main]

jobs:
  pr-build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node-version: [20.x, 22.x, 24.x]
        os: [macos-latest, ubuntu-latest, windows-latest]
    steps:
      - name: Harden Runner
        if: matrix.os == 'ubuntu-latest'
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: ${{ matrix.node-version }}
      - name: Set up JDK 17
        uses: actions/setup-java@c5195efecf7bdfc987ee8bae7a71cb8b11521c00 # v4.7.1
        with:
          java-version: '17'
          distribution: 'temurin'
      # Configure Gradle for optimal use in GiHub Actions, including caching of downloaded dependencies.
      # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@ac638b010cf58a27ee6c972d7336334ccaf61c96 # v4.4.1
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@f9c9c575b8b21b6485636a91ffecd10e558c62f6

      - run: bash ci/build-and-test-pr.sh
        shell: bash
        env:
          CASE_publish: false
          NODE_VERSION: ${{ matrix.node-version }}
          FORCE_COLOR: true
