name: Build + test (no download)

on:
  push:
    branches:
      - main
  pull_request:
    branches: [main]

jobs:
  pr-build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
        os: [macos-latest, ubuntu-latest, windows-latest]
    steps:
      - name: Harden Runner
        if: matrix.os == 'ubuntu-latest'
        uses: step-security/harden-runner@4d991eb9b905ef189e4c376166672c3f2f230481 # v2.11.0
        with:
          egress-policy: audit

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@1d0ff469b7ec7b3cb9d8673fde0c81c44821de2a # v4.2.0
        with:
          node-version: ${{ matrix.node-version }}
      - name: Set up JDK 17
        uses: actions/setup-java@3a4f6e1af504cf6a31855fa899c6aa5355ba6c12 # v4.7.0
        with:
          java-version: '17'
          distribution: 'temurin'
      # Configure Gradle for optimal use in GiHub Actions, including caching of downloaded dependencies.
      # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@94baf225fe0a508e581a564467443d0e2379123b # v4.3.0
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@f9c9c575b8b21b6485636a91ffecd10e558c62f6

      - run: bash ci/build-and-test-pr.sh
        shell: bash
        env:
          CASE_publish: false
          NODE_VERSION: ${{ matrix.node-version }}
          FORCE_COLOR: true
