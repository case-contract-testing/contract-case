{
  "contractType": "case::contract",
  "description": {
    "consumerName": "Case",
    "providerName": "Pact Broker"
  },
  "metadata": {
    "_case": {
      "version": "case-internal-tests"
    }
  },
  "matcherLookup": {
    "variable:default:token::test[0]": {
      "_case:matcher:type": "_case:CascadingContext",
      "_case:matcher:child": {
        "_case:matcher:type": "_case:CascadingContext",
        "_case:matcher:child": "TOKEN",
        "_case:context:matchBy": "type"
      },
      "_case:context:matchBy": "type"
    },
    "variable:default:providerName::test[0]": {
      "_case:matcher:type": "_case:CascadingContext",
      "_case:matcher:child": {
        "_case:matcher:type": "_case:CascadingContext",
        "_case:matcher:child": "http request provider",
        "_case:context:matchBy": "type"
      },
      "_case:context:matchBy": "type"
    },
    "matcher:a (200) response with body an object shaped like {_embedded: an object shaped like {pacts: an array where each entry matches an object shaped like {verificationProperties: an object shaped like {notices: an array where each entry matches an object shaped like {text: <any string>}},_links: an object shaped like {self: an object shaped like {href: <any string>,name: <any string>}}}},_links: an object shaped like {self: an object shaped like {href: <any string>,title: <any string>}}}": {
      "status": 200,
      "body": {
        "_embedded": {
          "pacts": {
            "_case:matcher:type": "_case:ArrayEachEntryLike",
            "_case:matcher:matcher": {
              "verificationProperties": {
                "notices": {
                  "_case:matcher:type": "_case:ArrayEachEntryLike",
                  "_case:matcher:matcher": {
                    "_case:matcher:type": "_case:CascadingContext",
                    "_case:matcher:child": {
                      "text": "This pact is being verified because it is the pact for the latest version of Foo tagged with 'dev'"
                    },
                    "_case:context:matchBy": "type"
                  }
                }
              },
              "_links": {
                "_case:matcher:type": "_case:CascadingContext",
                "_case:matcher:child": {
                  "self": {
                    "href": "http://localhost:9292/pacts/provider/Bar/consumer/Foo/pact-version/0e3369199f4008231946e0245474537443ccda2a",
                    "name": "Pact between Foo (v1.0.0) and Bar"
                  }
                },
                "_case:context:matchBy": "type"
              }
            }
          }
        },
        "_links": {
          "_case:matcher:type": "_case:CascadingContext",
          "_case:matcher:child": {
            "self": {
              "href": "http://localhost:9292/pacts/provider/Bar/for-verification",
              "title": "Pacts to be verified"
            }
          },
          "_case:context:matchBy": "type"
        }
      },
      "_case:matcher:type": "_case:HttpResponseMatcher"
    },
    "matcher:an http \"POST\" request to uriEncoded string '\"/pacts/provider/{{providerName}}/for-verification\"' with the following headers an object shaped like {accept: \"application/hal+json\",authorization: \"Bearer {{token}}\"} and body an object shaped like {consumerVersionSelectors: an array where each entry matches an object where each value is <any boolean>,providerVersionTags: an array shaped like [\"main\"] / an array of length min: 1, max: 1;}": {
      "method": "POST",
      "path": {
        "_case:matcher:type": "_case:UrlEncodedString",
        "_case:matcher:child": {
          "_case:matcher:type": "_case:StringPrefix",
          "_case:matcher:prefix": "/pacts/provider/",
          "_case:matcher:suffix": {
            "_case:matcher:type": "_case:StringSuffix",
            "_case:matcher:prefix": {
              "_case:matcher:type": "_case:ContextVariable",
              "_case:matcher:variableName": "providerName"
            },
            "_case:matcher:suffix": "/for-verification",
            "_case:matcher:resolvesTo": "string"
          },
          "_case:matcher:resolvesTo": "string"
        },
        "_case:matcher:accepts": "string",
        "_case:matcher:resolvesTo": "string"
      },
      "body": {
        "consumerVersionSelectors": {
          "_case:matcher:type": "_case:ArrayEachEntryLike",
          "_case:matcher:matcher": {
            "_case:matcher:type": "_case:ObjectValuesMatch",
            "_case:matcher:matcher": {
              "_case:matcher:type": "_case:MatchBoolean",
              "_case:matcher:example": true,
              "_case:context:matchBy": "type",
              "_case:matcher:resolvesTo": "boolean"
            }
          }
        },
        "providerVersionTags": [
          "main"
        ]
      },
      "headers": {
        "accept": "application/hal+json",
        "authorization": {
          "_case:matcher:type": "_case:StringPrefix",
          "_case:matcher:prefix": "Bearer ",
          "_case:matcher:suffix": {
            "_case:matcher:type": "_case:ContextVariable",
            "_case:matcher:variableName": "token",
            "_case:matcher:resolvesTo": "string"
          },
          "_case:matcher:resolvesTo": "string"
        }
      },
      "_case:matcher:type": "_case:HttpRequestMatcher"
    },
    "variable:default:username::test[1]": {
      "_case:matcher:type": "_case:CascadingContext",
      "_case:matcher:child": {
        "_case:matcher:type": "_case:CascadingContext",
        "_case:matcher:child": "someUsername",
        "_case:context:matchBy": "type"
      },
      "_case:context:matchBy": "type"
    },
    "variable:default:password::test[1]": {
      "_case:matcher:type": "_case:CascadingContext",
      "_case:matcher:child": {
        "_case:matcher:type": "_case:CascadingContext",
        "_case:matcher:child": "somePassword",
        "_case:context:matchBy": "type"
      },
      "_case:context:matchBy": "type"
    },
    "variable:default:providerName::test[1]": {
      "_case:matcher:type": "_case:CascadingContext",
      "_case:matcher:child": {
        "_case:matcher:type": "_case:CascadingContext",
        "_case:matcher:child": "http request provider",
        "_case:context:matchBy": "type"
      },
      "_case:context:matchBy": "type"
    },
    "matcher:an http \"POST\" request to uriEncoded string '\"/pacts/provider/{{providerName}}/for-verification\"' with the following headers an object shaped like {accept: \"application/hal+json\",authorization: \"Basic http basic auth with username='{{username}}' and password={{password}}\"} and body an object shaped like {consumerVersionSelectors: an array where each entry matches an object where each value is <any boolean>,providerVersionTags: an array shaped like [\"main\"] / an array of length min: 1, max: 1;}": {
      "method": "POST",
      "path": {
        "_case:matcher:type": "_case:UrlEncodedString",
        "_case:matcher:child": {
          "_case:matcher:type": "_case:StringPrefix",
          "_case:matcher:prefix": "/pacts/provider/",
          "_case:matcher:suffix": {
            "_case:matcher:type": "_case:StringSuffix",
            "_case:matcher:prefix": {
              "_case:matcher:type": "_case:ContextVariable",
              "_case:matcher:variableName": "providerName"
            },
            "_case:matcher:suffix": "/for-verification",
            "_case:matcher:resolvesTo": "string"
          },
          "_case:matcher:resolvesTo": "string"
        },
        "_case:matcher:accepts": "string",
        "_case:matcher:resolvesTo": "string"
      },
      "body": {
        "consumerVersionSelectors": {
          "_case:matcher:type": "_case:ArrayEachEntryLike",
          "_case:matcher:matcher": {
            "_case:matcher:type": "_case:ObjectValuesMatch",
            "_case:matcher:matcher": {
              "_case:matcher:type": "_case:MatchBoolean",
              "_case:matcher:example": true,
              "_case:context:matchBy": "type",
              "_case:matcher:resolvesTo": "boolean"
            }
          }
        },
        "providerVersionTags": [
          "main"
        ]
      },
      "headers": {
        "accept": "application/hal+json",
        "authorization": {
          "_case:matcher:type": "_case:StringPrefix",
          "_case:matcher:prefix": "Basic ",
          "_case:matcher:suffix": {
            "_case:matcher:type": "_case:HttpBasicAuth",
            "_case:matcher:username": {
              "_case:matcher:type": "_case:ContextVariable",
              "_case:matcher:variableName": "username",
              "_case:matcher:resolvesTo": "string"
            },
            "_case:matcher:password": {
              "_case:matcher:type": "_case:ContextVariable",
              "_case:matcher:variableName": "password",
              "_case:matcher:resolvesTo": "string"
            },
            "_case:matcher:resolvesTo": "string"
          },
          "_case:matcher:resolvesTo": "string"
        }
      },
      "_case:matcher:type": "_case:HttpRequestMatcher"
    },
    "variable:default:token::test[2]": {
      "_case:matcher:type": "_case:CascadingContext",
      "_case:matcher:child": {
        "_case:matcher:type": "_case:CascadingContext",
        "_case:matcher:child": "TOKEN",
        "_case:context:matchBy": "type"
      },
      "_case:context:matchBy": "type"
    },
    "matcher:a (200) response with body an object shaped like {notices: an array containing an object shaped like {type: \"debug\",text: <any string>}, / an array containing an object shaped like {type: \"info\",text: <any string>},}": {
      "status": 200,
      "body": {
        "notices": {
          "_case:matcher:type": "_case:CascadingContext",
          "_case:matcher:child": {
            "_case:matcher:type": "_case:And",
            "_case:matcher:children": [
              {
                "_case:matcher:type": "_case:ArrayContains",
                "_case:matcher:matchers": [
                  {
                    "type": "debug",
                    "text": {
                      "_case:matcher:type": "_case:MatchString",
                      "_case:matcher:example": "Created Foo version dc5eb529230038a4673b8c971395bd2922d8b240 with branch main and tags main",
                      "_case:matcher:resolvesTo": "string",
                      "_case:context:matchBy": "type"
                    }
                  }
                ]
              },
              {
                "_case:matcher:type": "_case:ArrayContains",
                "_case:matcher:matchers": [
                  {
                    "type": "info",
                    "text": {
                      "_case:matcher:type": "_case:MatchString",
                      "_case:matcher:example": "Pact published for Foo version dc5eb529230038a4673b8c971395bd2922d8b240 and provider Bar.",
                      "_case:matcher:resolvesTo": "string",
                      "_case:context:matchBy": "type"
                    }
                  }
                ]
              }
            ]
          },
          "_case:matcher:example": {
            "notices": [
              {
                "type": "debug",
                "text": "Created Foo version dc5eb529230038a4673b8c971395bd2922d8b240 with branch main and tags main"
              },
              {
                "type": "info",
                "text": "Pact published for Foo version dc5eb529230038a4673b8c971395bd2922d8b240 and provider Bar."
              }
            ]
          }
        }
      },
      "_case:matcher:type": "_case:HttpResponseMatcher"
    },
    "matcher:an http \"POST\" request to \"/contracts/publish\" with the following headers an object shaped like {accept: \"application/hal+json\",authorization: \"Bearer {{token}}\"} and body an object shaped like {pacticipantName: <any string>,pacticipantVersionNumber: <any string>,branch: <any string>,tags: an array shaped like [] / an array of length min: 0, max: 0;,contracts: an array shaped like [an object shaped like {consumerName: <any string>,providerName: <any string>,specification: \"pact\",contentType: \"application/json\",content: base64 encoded string 'json stringified 'an object shaped like {contractType: \"_case::contract\",description: an object shaped like {consumerName: <any string>,providerName: <any string>}}''}] / an array of length min: 1, max: 1;}": {
      "method": "POST",
      "path": "/contracts/publish",
      "headers": {
        "accept": "application/hal+json",
        "authorization": {
          "_case:matcher:type": "_case:StringPrefix",
          "_case:matcher:prefix": "Bearer ",
          "_case:matcher:suffix": {
            "_case:matcher:type": "_case:ContextVariable",
            "_case:matcher:variableName": "token"
          },
          "_case:matcher:resolvesTo": "string"
        }
      },
      "body": {
        "pacticipantName": {
          "_case:matcher:type": "_case:MatchString",
          "_case:matcher:example": "someString",
          "_case:matcher:resolvesTo": "string",
          "_case:context:matchBy": "type"
        },
        "pacticipantVersionNumber": {
          "_case:matcher:type": "_case:MatchString",
          "_case:matcher:example": "1.2.3",
          "_case:matcher:resolvesTo": "string",
          "_case:context:matchBy": "type"
        },
        "branch": {
          "_case:matcher:type": "_case:MatchString",
          "_case:matcher:example": "main",
          "_case:matcher:resolvesTo": "string",
          "_case:context:matchBy": "type"
        },
        "tags": [],
        "contracts": [
          {
            "consumerName": {
              "_case:matcher:type": "_case:MatchString",
              "_case:matcher:example": "someString",
              "_case:matcher:resolvesTo": "string",
              "_case:context:matchBy": "type"
            },
            "providerName": {
              "_case:matcher:type": "_case:MatchString",
              "_case:matcher:example": "someString",
              "_case:matcher:resolvesTo": "string",
              "_case:context:matchBy": "type"
            },
            "specification": "pact",
            "contentType": "application/json",
            "content": {
              "_case:matcher:type": "_case:Base64Encoded",
              "_case:matcher:child": {
                "_case:matcher:type": "_case:JsonEncoded",
                "_case:matcher:child": {
                  "contractType": "_case::contract",
                  "description": {
                    "consumerName": {
                      "_case:matcher:type": "_case:MatchString",
                      "_case:matcher:example": "Case",
                      "_case:matcher:resolvesTo": "string",
                      "_case:context:matchBy": "type"
                    },
                    "providerName": {
                      "_case:matcher:type": "_case:MatchString",
                      "_case:matcher:example": "Pact Broker",
                      "_case:matcher:resolvesTo": "string",
                      "_case:context:matchBy": "type"
                    }
                  }
                },
                "_case:matcher:resolvesTo": "string"
              },
              "_case:matcher:resolvesTo": "string"
            }
          }
        ]
      },
      "_case:matcher:type": "_case:HttpRequestMatcher"
    },
    "variable:default:token::test[3]": {
      "_case:matcher:type": "_case:CascadingContext",
      "_case:matcher:child": {
        "_case:matcher:type": "_case:CascadingContext",
        "_case:matcher:child": "INVALID_TOKEN",
        "_case:context:matchBy": "type"
      },
      "_case:context:matchBy": "type"
    },
    "matcher:a (403) response without a body": {
      "status": 403,
      "_case:matcher:type": "_case:HttpResponseMatcher"
    },
    "matcher:an http \"POST\" request to \"/contracts/publish\" with the following headers an object shaped like {accept: \"application/hal+json\",authorization: \"Bearer {{token}}\"} and body an object shaped like {pacticipantName: <any string>,pacticipantVersionNumber: <any string>,branch: <any string>,tags: an array shaped like [] / an array of length min: 0, max: 0;,contracts: an array shaped like [an object shaped like {consumerName: <any string>,providerName: <any string>,specification: \"pact\",contentType: \"application/json\",content: <any string>}] / an array of length min: 1, max: 1;}": {
      "method": "POST",
      "path": "/contracts/publish",
      "headers": {
        "accept": "application/hal+json",
        "authorization": {
          "_case:matcher:type": "_case:StringPrefix",
          "_case:matcher:prefix": "Bearer ",
          "_case:matcher:suffix": {
            "_case:matcher:type": "_case:ContextVariable",
            "_case:matcher:variableName": "token"
          },
          "_case:matcher:resolvesTo": "string"
        }
      },
      "body": {
        "pacticipantName": {
          "_case:matcher:type": "_case:MatchString",
          "_case:matcher:example": "someString",
          "_case:matcher:resolvesTo": "string",
          "_case:context:matchBy": "type"
        },
        "pacticipantVersionNumber": {
          "_case:matcher:type": "_case:MatchString",
          "_case:matcher:example": "1.2.3",
          "_case:matcher:resolvesTo": "string",
          "_case:context:matchBy": "type"
        },
        "branch": {
          "_case:matcher:type": "_case:MatchString",
          "_case:matcher:example": "main",
          "_case:matcher:resolvesTo": "string",
          "_case:context:matchBy": "type"
        },
        "tags": [],
        "contracts": [
          {
            "consumerName": {
              "_case:matcher:type": "_case:MatchString",
              "_case:matcher:example": "someString",
              "_case:matcher:resolvesTo": "string",
              "_case:context:matchBy": "type"
            },
            "providerName": {
              "_case:matcher:type": "_case:MatchString",
              "_case:matcher:example": "someString",
              "_case:matcher:resolvesTo": "string",
              "_case:context:matchBy": "type"
            },
            "specification": "pact",
            "contentType": "application/json",
            "content": {
              "_case:matcher:type": "_case:MatchString",
              "_case:matcher:example": "",
              "_case:matcher:resolvesTo": "string",
              "_case:context:matchBy": "type"
            }
          }
        ]
      },
      "_case:matcher:type": "_case:HttpRequestMatcher"
    },
    "variable:default:token::test[4]": {
      "_case:matcher:type": "_case:CascadingContext",
      "_case:matcher:child": {
        "_case:matcher:type": "_case:CascadingContext",
        "_case:matcher:child": "TOKEN",
        "_case:context:matchBy": "type"
      },
      "_case:context:matchBy": "type"
    },
    "variable:default:serviceName::test[4]": {
      "_case:matcher:type": "_case:CascadingContext",
      "_case:matcher:child": {
        "_case:matcher:type": "_case:CascadingContext",
        "_case:matcher:child": "fooService",
        "_case:context:matchBy": "type"
      },
      "_case:context:matchBy": "type"
    },
    "variable:default:version::test[4]": {
      "_case:matcher:type": "_case:CascadingContext",
      "_case:matcher:child": {
        "_case:matcher:type": "_case:CascadingContext",
        "_case:matcher:child": "v1.0.0",
        "_case:context:matchBy": "type"
      },
      "_case:context:matchBy": "type"
    },
    "matcher:a (200) response with body an object shaped like {summary: an object shaped like {deployable: true,reason: <any string>,success: <any number>,failed: 0,unknown: 0}}": {
      "status": 200,
      "body": {
        "summary": {
          "deployable": true,
          "reason": {
            "_case:matcher:type": "_case:MatchString",
            "_case:matcher:example": "someString",
            "_case:matcher:resolvesTo": "string",
            "_case:context:matchBy": "type"
          },
          "success": {
            "_case:matcher:type": "_case:MatchNumber",
            "_case:matcher:example": 1.1,
            "_case:matcher:resolvesTo": "number",
            "_case:context:matchBy": "type"
          },
          "failed": 0,
          "unknown": 0
        }
      },
      "_case:matcher:type": "_case:HttpResponseMatcher"
    },
    "matcher:an http \"GET\" request to \"/can-i-deploy\"?pacticipant={{serviceName}}&version={{version}}&environment=\"prod\" with the following headers an object shaped like {accept: \"application/hal+json\",authorization: \"Bearer {{token}}\"} without a body": {
      "method": "GET",
      "path": "/can-i-deploy",
      "query": {
        "pacticipant": {
          "_case:matcher:type": "_case:ContextVariable",
          "_case:matcher:variableName": "serviceName"
        },
        "version": {
          "_case:matcher:type": "_case:ContextVariable",
          "_case:matcher:variableName": "version"
        },
        "environment": "prod"
      },
      "headers": {
        "accept": "application/hal+json",
        "authorization": {
          "_case:matcher:type": "_case:StringPrefix",
          "_case:matcher:prefix": "Bearer ",
          "_case:matcher:suffix": {
            "_case:matcher:type": "_case:ContextVariable",
            "_case:matcher:variableName": "token"
          },
          "_case:matcher:resolvesTo": "string"
        }
      },
      "_case:matcher:type": "_case:HttpRequestMatcher"
    },
    "variable:default:token::test[5]": {
      "_case:matcher:type": "_case:CascadingContext",
      "_case:matcher:child": {
        "_case:matcher:type": "_case:CascadingContext",
        "_case:matcher:child": "TOKEN",
        "_case:context:matchBy": "type"
      },
      "_case:context:matchBy": "type"
    },
    "variable:default:serviceName::test[5]": {
      "_case:matcher:type": "_case:CascadingContext",
      "_case:matcher:child": {
        "_case:matcher:type": "_case:CascadingContext",
        "_case:matcher:child": "fooService",
        "_case:context:matchBy": "type"
      },
      "_case:context:matchBy": "type"
    },
    "variable:default:version::test[5]": {
      "_case:matcher:type": "_case:CascadingContext",
      "_case:matcher:child": {
        "_case:matcher:type": "_case:CascadingContext",
        "_case:matcher:child": "v1.0.0",
        "_case:context:matchBy": "type"
      },
      "_case:context:matchBy": "type"
    },
    "matcher:a (200) response with body an object shaped like {summary: an object shaped like {deployable: false,reason: <any string>,success: <any number>,failed: <any number>,unknown: <any number>}}": {
      "status": 200,
      "body": {
        "summary": {
          "deployable": false,
          "reason": {
            "_case:matcher:type": "_case:MatchString",
            "_case:matcher:example": "someString",
            "_case:matcher:resolvesTo": "string",
            "_case:context:matchBy": "type"
          },
          "success": {
            "_case:matcher:type": "_case:MatchNumber",
            "_case:matcher:example": 1.1,
            "_case:matcher:resolvesTo": "number",
            "_case:context:matchBy": "type"
          },
          "failed": {
            "_case:matcher:type": "_case:MatchNumber",
            "_case:matcher:example": 1.1,
            "_case:matcher:resolvesTo": "number",
            "_case:context:matchBy": "type"
          },
          "unknown": {
            "_case:matcher:type": "_case:MatchNumber",
            "_case:matcher:example": 1.1,
            "_case:matcher:resolvesTo": "number",
            "_case:context:matchBy": "type"
          }
        }
      },
      "_case:matcher:type": "_case:HttpResponseMatcher"
    }
  },
  "examples": [
    {
      "states": [
        {
          "_case:state:type": "_case:StateWithVariables",
          "stateName": "auth token is valid",
          "variables": {
            "token": {
              "_case:matcher:type": "_case:CascadingContext",
              "_case:matcher:child": "TOKEN",
              "_case:context:matchBy": "type"
            }
          }
        },
        {
          "_case:state:type": "_case:StateWithVariables",
          "stateName": "with provider name",
          "variables": {
            "providerName": {
              "_case:matcher:type": "_case:CascadingContext",
              "_case:matcher:child": "http request provider",
              "_case:context:matchBy": "type"
            }
          }
        }
      ],
      "mock": {
        "request": {
          "_case:matcher:type": "_case:Lookup",
          "_case:matcher:uniqueName": "an http \"POST\" request to uriEncoded string '\"/pacts/provider/{{providerName}}/for-verification\"' with the following headers an object shaped like {accept: \"application/hal+json\",authorization: \"Bearer {{token}}\"} and body an object shaped like {consumerVersionSelectors: an array where each entry matches an object where each value is <any boolean>,providerVersionTags: an array shaped like [\"main\"] / an array of length min: 1, max: 1;}",
          "_case:matcher:child": {
            "method": "POST",
            "path": {
              "_case:matcher:type": "_case:UrlEncodedString",
              "_case:matcher:child": {
                "_case:matcher:type": "_case:StringPrefix",
                "_case:matcher:prefix": "/pacts/provider/",
                "_case:matcher:suffix": {
                  "_case:matcher:type": "_case:StringSuffix",
                  "_case:matcher:prefix": {
                    "_case:matcher:type": "_case:ContextVariable",
                    "_case:matcher:variableName": "providerName"
                  },
                  "_case:matcher:suffix": "/for-verification",
                  "_case:matcher:resolvesTo": "string"
                },
                "_case:matcher:resolvesTo": "string"
              },
              "_case:matcher:accepts": "string",
              "_case:matcher:resolvesTo": "string"
            },
            "body": {
              "consumerVersionSelectors": {
                "_case:matcher:type": "_case:ArrayEachEntryLike",
                "_case:matcher:matcher": {
                  "_case:matcher:type": "_case:ObjectValuesMatch",
                  "_case:matcher:matcher": {
                    "_case:matcher:type": "_case:MatchBoolean",
                    "_case:matcher:example": true,
                    "_case:context:matchBy": "type",
                    "_case:matcher:resolvesTo": "boolean"
                  }
                }
              },
              "providerVersionTags": [
                "main"
              ]
            },
            "headers": {
              "accept": "application/hal+json",
              "authorization": {
                "_case:matcher:type": "_case:StringPrefix",
                "_case:matcher:prefix": "Bearer ",
                "_case:matcher:suffix": {
                  "_case:matcher:type": "_case:ContextVariable",
                  "_case:matcher:variableName": "token",
                  "_case:matcher:resolvesTo": "string"
                },
                "_case:matcher:resolvesTo": "string"
              }
            },
            "_case:matcher:type": "_case:HttpRequestMatcher"
          }
        },
        "response": {
          "_case:matcher:type": "_case:Lookup",
          "_case:matcher:uniqueName": "a (200) response with body an object shaped like {_embedded: an object shaped like {pacts: an array where each entry matches an object shaped like {verificationProperties: an object shaped like {notices: an array where each entry matches an object shaped like {text: <any string>}},_links: an object shaped like {self: an object shaped like {href: <any string>,name: <any string>}}}},_links: an object shaped like {self: an object shaped like {href: <any string>,title: <any string>}}}",
          "_case:matcher:child": {
            "status": 200,
            "body": {
              "_embedded": {
                "pacts": {
                  "_case:matcher:type": "_case:ArrayEachEntryLike",
                  "_case:matcher:matcher": {
                    "verificationProperties": {
                      "notices": {
                        "_case:matcher:type": "_case:ArrayEachEntryLike",
                        "_case:matcher:matcher": {
                          "_case:matcher:type": "_case:CascadingContext",
                          "_case:matcher:child": {
                            "text": "This pact is being verified because it is the pact for the latest version of Foo tagged with 'dev'"
                          },
                          "_case:context:matchBy": "type"
                        }
                      }
                    },
                    "_links": {
                      "_case:matcher:type": "_case:CascadingContext",
                      "_case:matcher:child": {
                        "self": {
                          "href": "http://localhost:9292/pacts/provider/Bar/consumer/Foo/pact-version/0e3369199f4008231946e0245474537443ccda2a",
                          "name": "Pact between Foo (v1.0.0) and Bar"
                        }
                      },
                      "_case:context:matchBy": "type"
                    }
                  }
                }
              },
              "_links": {
                "_case:matcher:type": "_case:CascadingContext",
                "_case:matcher:child": {
                  "self": {
                    "href": "http://localhost:9292/pacts/provider/Bar/for-verification",
                    "title": "Pacts to be verified"
                  }
                },
                "_case:context:matchBy": "type"
              }
            },
            "_case:matcher:type": "_case:HttpResponseMatcher"
          }
        },
        "_case:mock:type": "_case:MockHttpServer",
        "_case:run:context:setup": {
          "write": {
            "type": "_case:MockHttpServer",
            "stateVariables": "default",
            "triggers": "provided"
          },
          "read": {
            "type": "_case:MockHttpClient",
            "stateVariables": "state",
            "triggers": "generated"
          }
        }
      },
      "result": "VERIFIED"
    },
    {
      "states": [
        {
          "_case:state:type": "_case:StateWithVariables",
          "stateName": "valid basic auth credentials",
          "variables": {
            "username": {
              "_case:matcher:type": "_case:CascadingContext",
              "_case:matcher:child": "someUsername",
              "_case:context:matchBy": "type"
            },
            "password": {
              "_case:matcher:type": "_case:CascadingContext",
              "_case:matcher:child": "somePassword",
              "_case:context:matchBy": "type"
            }
          }
        },
        {
          "_case:state:type": "_case:StateWithVariables",
          "stateName": "with provider name",
          "variables": {
            "providerName": {
              "_case:matcher:type": "_case:CascadingContext",
              "_case:matcher:child": "http request provider",
              "_case:context:matchBy": "type"
            }
          }
        }
      ],
      "mock": {
        "request": {
          "_case:matcher:type": "_case:Lookup",
          "_case:matcher:uniqueName": "an http \"POST\" request to uriEncoded string '\"/pacts/provider/{{providerName}}/for-verification\"' with the following headers an object shaped like {accept: \"application/hal+json\",authorization: \"Basic http basic auth with username='{{username}}' and password={{password}}\"} and body an object shaped like {consumerVersionSelectors: an array where each entry matches an object where each value is <any boolean>,providerVersionTags: an array shaped like [\"main\"] / an array of length min: 1, max: 1;}",
          "_case:matcher:child": {
            "method": "POST",
            "path": {
              "_case:matcher:type": "_case:UrlEncodedString",
              "_case:matcher:child": {
                "_case:matcher:type": "_case:StringPrefix",
                "_case:matcher:prefix": "/pacts/provider/",
                "_case:matcher:suffix": {
                  "_case:matcher:type": "_case:StringSuffix",
                  "_case:matcher:prefix": {
                    "_case:matcher:type": "_case:ContextVariable",
                    "_case:matcher:variableName": "providerName"
                  },
                  "_case:matcher:suffix": "/for-verification",
                  "_case:matcher:resolvesTo": "string"
                },
                "_case:matcher:resolvesTo": "string"
              },
              "_case:matcher:accepts": "string",
              "_case:matcher:resolvesTo": "string"
            },
            "body": {
              "consumerVersionSelectors": {
                "_case:matcher:type": "_case:ArrayEachEntryLike",
                "_case:matcher:matcher": {
                  "_case:matcher:type": "_case:ObjectValuesMatch",
                  "_case:matcher:matcher": {
                    "_case:matcher:type": "_case:MatchBoolean",
                    "_case:matcher:example": true,
                    "_case:context:matchBy": "type",
                    "_case:matcher:resolvesTo": "boolean"
                  }
                }
              },
              "providerVersionTags": [
                "main"
              ]
            },
            "headers": {
              "accept": "application/hal+json",
              "authorization": {
                "_case:matcher:type": "_case:StringPrefix",
                "_case:matcher:prefix": "Basic ",
                "_case:matcher:suffix": {
                  "_case:matcher:type": "_case:HttpBasicAuth",
                  "_case:matcher:username": {
                    "_case:matcher:type": "_case:ContextVariable",
                    "_case:matcher:variableName": "username",
                    "_case:matcher:resolvesTo": "string"
                  },
                  "_case:matcher:password": {
                    "_case:matcher:type": "_case:ContextVariable",
                    "_case:matcher:variableName": "password",
                    "_case:matcher:resolvesTo": "string"
                  },
                  "_case:matcher:resolvesTo": "string"
                },
                "_case:matcher:resolvesTo": "string"
              }
            },
            "_case:matcher:type": "_case:HttpRequestMatcher"
          }
        },
        "response": {
          "_case:matcher:type": "_case:Lookup",
          "_case:matcher:uniqueName": "a (200) response with body an object shaped like {_embedded: an object shaped like {pacts: an array where each entry matches an object shaped like {verificationProperties: an object shaped like {notices: an array where each entry matches an object shaped like {text: <any string>}},_links: an object shaped like {self: an object shaped like {href: <any string>,name: <any string>}}}},_links: an object shaped like {self: an object shaped like {href: <any string>,title: <any string>}}}",
          "_case:matcher:child": {
            "status": 200,
            "body": {
              "_embedded": {
                "pacts": {
                  "_case:matcher:type": "_case:ArrayEachEntryLike",
                  "_case:matcher:matcher": {
                    "verificationProperties": {
                      "notices": {
                        "_case:matcher:type": "_case:ArrayEachEntryLike",
                        "_case:matcher:matcher": {
                          "_case:matcher:type": "_case:CascadingContext",
                          "_case:matcher:child": {
                            "text": "This pact is being verified because it is the pact for the latest version of Foo tagged with 'dev'"
                          },
                          "_case:context:matchBy": "type"
                        }
                      }
                    },
                    "_links": {
                      "_case:matcher:type": "_case:CascadingContext",
                      "_case:matcher:child": {
                        "self": {
                          "href": "http://localhost:9292/pacts/provider/Bar/consumer/Foo/pact-version/0e3369199f4008231946e0245474537443ccda2a",
                          "name": "Pact between Foo (v1.0.0) and Bar"
                        }
                      },
                      "_case:context:matchBy": "type"
                    }
                  }
                }
              },
              "_links": {
                "_case:matcher:type": "_case:CascadingContext",
                "_case:matcher:child": {
                  "self": {
                    "href": "http://localhost:9292/pacts/provider/Bar/for-verification",
                    "title": "Pacts to be verified"
                  }
                },
                "_case:context:matchBy": "type"
              }
            },
            "_case:matcher:type": "_case:HttpResponseMatcher"
          }
        },
        "_case:mock:type": "_case:MockHttpServer",
        "_case:run:context:setup": {
          "write": {
            "type": "_case:MockHttpServer",
            "stateVariables": "default",
            "triggers": "provided"
          },
          "read": {
            "type": "_case:MockHttpClient",
            "stateVariables": "state",
            "triggers": "generated"
          }
        }
      },
      "result": "VERIFIED"
    },
    {
      "states": [
        {
          "_case:state:type": "_case:StateWithVariables",
          "stateName": "auth token is valid",
          "variables": {
            "token": {
              "_case:matcher:type": "_case:CascadingContext",
              "_case:matcher:child": "TOKEN",
              "_case:context:matchBy": "type"
            }
          }
        }
      ],
      "mock": {
        "request": {
          "_case:matcher:type": "_case:Lookup",
          "_case:matcher:uniqueName": "an http \"POST\" request to \"/contracts/publish\" with the following headers an object shaped like {accept: \"application/hal+json\",authorization: \"Bearer {{token}}\"} and body an object shaped like {pacticipantName: <any string>,pacticipantVersionNumber: <any string>,branch: <any string>,tags: an array shaped like [] / an array of length min: 0, max: 0;,contracts: an array shaped like [an object shaped like {consumerName: <any string>,providerName: <any string>,specification: \"pact\",contentType: \"application/json\",content: base64 encoded string 'json stringified 'an object shaped like {contractType: \"_case::contract\",description: an object shaped like {consumerName: <any string>,providerName: <any string>}}''}] / an array of length min: 1, max: 1;}",
          "_case:matcher:child": {
            "method": "POST",
            "path": "/contracts/publish",
            "headers": {
              "accept": "application/hal+json",
              "authorization": {
                "_case:matcher:type": "_case:StringPrefix",
                "_case:matcher:prefix": "Bearer ",
                "_case:matcher:suffix": {
                  "_case:matcher:type": "_case:ContextVariable",
                  "_case:matcher:variableName": "token"
                },
                "_case:matcher:resolvesTo": "string"
              }
            },
            "body": {
              "pacticipantName": {
                "_case:matcher:type": "_case:MatchString",
                "_case:matcher:example": "someString",
                "_case:matcher:resolvesTo": "string",
                "_case:context:matchBy": "type"
              },
              "pacticipantVersionNumber": {
                "_case:matcher:type": "_case:MatchString",
                "_case:matcher:example": "1.2.3",
                "_case:matcher:resolvesTo": "string",
                "_case:context:matchBy": "type"
              },
              "branch": {
                "_case:matcher:type": "_case:MatchString",
                "_case:matcher:example": "main",
                "_case:matcher:resolvesTo": "string",
                "_case:context:matchBy": "type"
              },
              "tags": [],
              "contracts": [
                {
                  "consumerName": {
                    "_case:matcher:type": "_case:MatchString",
                    "_case:matcher:example": "someString",
                    "_case:matcher:resolvesTo": "string",
                    "_case:context:matchBy": "type"
                  },
                  "providerName": {
                    "_case:matcher:type": "_case:MatchString",
                    "_case:matcher:example": "someString",
                    "_case:matcher:resolvesTo": "string",
                    "_case:context:matchBy": "type"
                  },
                  "specification": "pact",
                  "contentType": "application/json",
                  "content": {
                    "_case:matcher:type": "_case:Base64Encoded",
                    "_case:matcher:child": {
                      "_case:matcher:type": "_case:JsonEncoded",
                      "_case:matcher:child": {
                        "contractType": "_case::contract",
                        "description": {
                          "consumerName": {
                            "_case:matcher:type": "_case:MatchString",
                            "_case:matcher:example": "Case",
                            "_case:matcher:resolvesTo": "string",
                            "_case:context:matchBy": "type"
                          },
                          "providerName": {
                            "_case:matcher:type": "_case:MatchString",
                            "_case:matcher:example": "Pact Broker",
                            "_case:matcher:resolvesTo": "string",
                            "_case:context:matchBy": "type"
                          }
                        }
                      },
                      "_case:matcher:resolvesTo": "string"
                    },
                    "_case:matcher:resolvesTo": "string"
                  }
                }
              ]
            },
            "_case:matcher:type": "_case:HttpRequestMatcher"
          }
        },
        "response": {
          "_case:matcher:type": "_case:Lookup",
          "_case:matcher:uniqueName": "a (200) response with body an object shaped like {notices: an array containing an object shaped like {type: \"debug\",text: <any string>}, / an array containing an object shaped like {type: \"info\",text: <any string>},}",
          "_case:matcher:child": {
            "status": 200,
            "body": {
              "notices": {
                "_case:matcher:type": "_case:CascadingContext",
                "_case:matcher:child": {
                  "_case:matcher:type": "_case:And",
                  "_case:matcher:children": [
                    {
                      "_case:matcher:type": "_case:ArrayContains",
                      "_case:matcher:matchers": [
                        {
                          "type": "debug",
                          "text": {
                            "_case:matcher:type": "_case:MatchString",
                            "_case:matcher:example": "Created Foo version dc5eb529230038a4673b8c971395bd2922d8b240 with branch main and tags main",
                            "_case:matcher:resolvesTo": "string",
                            "_case:context:matchBy": "type"
                          }
                        }
                      ]
                    },
                    {
                      "_case:matcher:type": "_case:ArrayContains",
                      "_case:matcher:matchers": [
                        {
                          "type": "info",
                          "text": {
                            "_case:matcher:type": "_case:MatchString",
                            "_case:matcher:example": "Pact published for Foo version dc5eb529230038a4673b8c971395bd2922d8b240 and provider Bar.",
                            "_case:matcher:resolvesTo": "string",
                            "_case:context:matchBy": "type"
                          }
                        }
                      ]
                    }
                  ]
                },
                "_case:matcher:example": {
                  "notices": [
                    {
                      "type": "debug",
                      "text": "Created Foo version dc5eb529230038a4673b8c971395bd2922d8b240 with branch main and tags main"
                    },
                    {
                      "type": "info",
                      "text": "Pact published for Foo version dc5eb529230038a4673b8c971395bd2922d8b240 and provider Bar."
                    }
                  ]
                }
              }
            },
            "_case:matcher:type": "_case:HttpResponseMatcher"
          }
        },
        "_case:mock:type": "_case:MockHttpServer",
        "_case:run:context:setup": {
          "write": {
            "type": "_case:MockHttpServer",
            "stateVariables": "default",
            "triggers": "provided"
          },
          "read": {
            "type": "_case:MockHttpClient",
            "stateVariables": "state",
            "triggers": "generated"
          }
        }
      },
      "result": "VERIFIED"
    },
    {
      "states": [
        {
          "_case:state:type": "_case:StateWithVariables",
          "stateName": "auth token is not valid",
          "variables": {
            "token": {
              "_case:matcher:type": "_case:CascadingContext",
              "_case:matcher:child": "INVALID_TOKEN",
              "_case:context:matchBy": "type"
            }
          }
        }
      ],
      "mock": {
        "request": {
          "_case:matcher:type": "_case:Lookup",
          "_case:matcher:uniqueName": "an http \"POST\" request to \"/contracts/publish\" with the following headers an object shaped like {accept: \"application/hal+json\",authorization: \"Bearer {{token}}\"} and body an object shaped like {pacticipantName: <any string>,pacticipantVersionNumber: <any string>,branch: <any string>,tags: an array shaped like [] / an array of length min: 0, max: 0;,contracts: an array shaped like [an object shaped like {consumerName: <any string>,providerName: <any string>,specification: \"pact\",contentType: \"application/json\",content: <any string>}] / an array of length min: 1, max: 1;}",
          "_case:matcher:child": {
            "method": "POST",
            "path": "/contracts/publish",
            "headers": {
              "accept": "application/hal+json",
              "authorization": {
                "_case:matcher:type": "_case:StringPrefix",
                "_case:matcher:prefix": "Bearer ",
                "_case:matcher:suffix": {
                  "_case:matcher:type": "_case:ContextVariable",
                  "_case:matcher:variableName": "token"
                },
                "_case:matcher:resolvesTo": "string"
              }
            },
            "body": {
              "pacticipantName": {
                "_case:matcher:type": "_case:MatchString",
                "_case:matcher:example": "someString",
                "_case:matcher:resolvesTo": "string",
                "_case:context:matchBy": "type"
              },
              "pacticipantVersionNumber": {
                "_case:matcher:type": "_case:MatchString",
                "_case:matcher:example": "1.2.3",
                "_case:matcher:resolvesTo": "string",
                "_case:context:matchBy": "type"
              },
              "branch": {
                "_case:matcher:type": "_case:MatchString",
                "_case:matcher:example": "main",
                "_case:matcher:resolvesTo": "string",
                "_case:context:matchBy": "type"
              },
              "tags": [],
              "contracts": [
                {
                  "consumerName": {
                    "_case:matcher:type": "_case:MatchString",
                    "_case:matcher:example": "someString",
                    "_case:matcher:resolvesTo": "string",
                    "_case:context:matchBy": "type"
                  },
                  "providerName": {
                    "_case:matcher:type": "_case:MatchString",
                    "_case:matcher:example": "someString",
                    "_case:matcher:resolvesTo": "string",
                    "_case:context:matchBy": "type"
                  },
                  "specification": "pact",
                  "contentType": "application/json",
                  "content": {
                    "_case:matcher:type": "_case:MatchString",
                    "_case:matcher:example": "",
                    "_case:matcher:resolvesTo": "string",
                    "_case:context:matchBy": "type"
                  }
                }
              ]
            },
            "_case:matcher:type": "_case:HttpRequestMatcher"
          }
        },
        "response": {
          "_case:matcher:type": "_case:Lookup",
          "_case:matcher:uniqueName": "a (403) response without a body",
          "_case:matcher:child": {
            "status": 403,
            "_case:matcher:type": "_case:HttpResponseMatcher"
          }
        },
        "_case:mock:type": "_case:MockHttpServer",
        "_case:run:context:setup": {
          "write": {
            "type": "_case:MockHttpServer",
            "stateVariables": "default",
            "triggers": "provided"
          },
          "read": {
            "type": "_case:MockHttpClient",
            "stateVariables": "state",
            "triggers": "generated"
          }
        }
      },
      "result": "VERIFIED"
    },
    {
      "states": [
        {
          "_case:state:type": "_case:StateWithVariables",
          "stateName": "auth token is valid",
          "variables": {
            "token": {
              "_case:matcher:type": "_case:CascadingContext",
              "_case:matcher:child": "TOKEN",
              "_case:context:matchBy": "type"
            }
          }
        },
        {
          "_case:state:type": "_case:StateWithVariables",
          "stateName": "Safe to deploy to prod",
          "variables": {
            "serviceName": {
              "_case:matcher:type": "_case:CascadingContext",
              "_case:matcher:child": "fooService",
              "_case:context:matchBy": "type"
            },
            "version": {
              "_case:matcher:type": "_case:CascadingContext",
              "_case:matcher:child": "v1.0.0",
              "_case:context:matchBy": "type"
            }
          }
        }
      ],
      "mock": {
        "request": {
          "_case:matcher:type": "_case:Lookup",
          "_case:matcher:uniqueName": "an http \"GET\" request to \"/can-i-deploy\"?pacticipant={{serviceName}}&version={{version}}&environment=\"prod\" with the following headers an object shaped like {accept: \"application/hal+json\",authorization: \"Bearer {{token}}\"} without a body",
          "_case:matcher:child": {
            "method": "GET",
            "path": "/can-i-deploy",
            "query": {
              "pacticipant": {
                "_case:matcher:type": "_case:ContextVariable",
                "_case:matcher:variableName": "serviceName"
              },
              "version": {
                "_case:matcher:type": "_case:ContextVariable",
                "_case:matcher:variableName": "version"
              },
              "environment": "prod"
            },
            "headers": {
              "accept": "application/hal+json",
              "authorization": {
                "_case:matcher:type": "_case:StringPrefix",
                "_case:matcher:prefix": "Bearer ",
                "_case:matcher:suffix": {
                  "_case:matcher:type": "_case:ContextVariable",
                  "_case:matcher:variableName": "token"
                },
                "_case:matcher:resolvesTo": "string"
              }
            },
            "_case:matcher:type": "_case:HttpRequestMatcher"
          }
        },
        "response": {
          "_case:matcher:type": "_case:Lookup",
          "_case:matcher:uniqueName": "a (200) response with body an object shaped like {summary: an object shaped like {deployable: true,reason: <any string>,success: <any number>,failed: 0,unknown: 0}}",
          "_case:matcher:child": {
            "status": 200,
            "body": {
              "summary": {
                "deployable": true,
                "reason": {
                  "_case:matcher:type": "_case:MatchString",
                  "_case:matcher:example": "someString",
                  "_case:matcher:resolvesTo": "string",
                  "_case:context:matchBy": "type"
                },
                "success": {
                  "_case:matcher:type": "_case:MatchNumber",
                  "_case:matcher:example": 1.1,
                  "_case:matcher:resolvesTo": "number",
                  "_case:context:matchBy": "type"
                },
                "failed": 0,
                "unknown": 0
              }
            },
            "_case:matcher:type": "_case:HttpResponseMatcher"
          }
        },
        "_case:mock:type": "_case:MockHttpServer",
        "_case:run:context:setup": {
          "write": {
            "type": "_case:MockHttpServer",
            "stateVariables": "default",
            "triggers": "provided"
          },
          "read": {
            "type": "_case:MockHttpClient",
            "stateVariables": "state",
            "triggers": "generated"
          }
        }
      },
      "result": "VERIFIED"
    },
    {
      "states": [
        {
          "_case:state:type": "_case:StateWithVariables",
          "stateName": "auth token is valid",
          "variables": {
            "token": {
              "_case:matcher:type": "_case:CascadingContext",
              "_case:matcher:child": "TOKEN",
              "_case:context:matchBy": "type"
            }
          }
        },
        {
          "_case:state:type": "_case:StateWithVariables",
          "stateName": "Not safe to deploy to prod",
          "variables": {
            "serviceName": {
              "_case:matcher:type": "_case:CascadingContext",
              "_case:matcher:child": "fooService",
              "_case:context:matchBy": "type"
            },
            "version": {
              "_case:matcher:type": "_case:CascadingContext",
              "_case:matcher:child": "v1.0.0",
              "_case:context:matchBy": "type"
            }
          }
        }
      ],
      "mock": {
        "request": {
          "_case:matcher:type": "_case:Lookup",
          "_case:matcher:uniqueName": "an http \"GET\" request to \"/can-i-deploy\"?pacticipant={{serviceName}}&version={{version}}&environment=\"prod\" with the following headers an object shaped like {accept: \"application/hal+json\",authorization: \"Bearer {{token}}\"} without a body",
          "_case:matcher:child": {
            "method": "GET",
            "path": "/can-i-deploy",
            "query": {
              "pacticipant": {
                "_case:matcher:type": "_case:ContextVariable",
                "_case:matcher:variableName": "serviceName"
              },
              "version": {
                "_case:matcher:type": "_case:ContextVariable",
                "_case:matcher:variableName": "version"
              },
              "environment": "prod"
            },
            "headers": {
              "accept": "application/hal+json",
              "authorization": {
                "_case:matcher:type": "_case:StringPrefix",
                "_case:matcher:prefix": "Bearer ",
                "_case:matcher:suffix": {
                  "_case:matcher:type": "_case:ContextVariable",
                  "_case:matcher:variableName": "token"
                },
                "_case:matcher:resolvesTo": "string"
              }
            },
            "_case:matcher:type": "_case:HttpRequestMatcher"
          }
        },
        "response": {
          "_case:matcher:type": "_case:Lookup",
          "_case:matcher:uniqueName": "a (200) response with body an object shaped like {summary: an object shaped like {deployable: false,reason: <any string>,success: <any number>,failed: <any number>,unknown: <any number>}}",
          "_case:matcher:child": {
            "status": 200,
            "body": {
              "summary": {
                "deployable": false,
                "reason": {
                  "_case:matcher:type": "_case:MatchString",
                  "_case:matcher:example": "someString",
                  "_case:matcher:resolvesTo": "string",
                  "_case:context:matchBy": "type"
                },
                "success": {
                  "_case:matcher:type": "_case:MatchNumber",
                  "_case:matcher:example": 1.1,
                  "_case:matcher:resolvesTo": "number",
                  "_case:context:matchBy": "type"
                },
                "failed": {
                  "_case:matcher:type": "_case:MatchNumber",
                  "_case:matcher:example": 1.1,
                  "_case:matcher:resolvesTo": "number",
                  "_case:context:matchBy": "type"
                },
                "unknown": {
                  "_case:matcher:type": "_case:MatchNumber",
                  "_case:matcher:example": 1.1,
                  "_case:matcher:resolvesTo": "number",
                  "_case:context:matchBy": "type"
                }
              }
            },
            "_case:matcher:type": "_case:HttpResponseMatcher"
          }
        },
        "_case:mock:type": "_case:MockHttpServer",
        "_case:run:context:setup": {
          "write": {
            "type": "_case:MockHttpServer",
            "stateVariables": "default",
            "triggers": "provided"
          },
          "read": {
            "type": "_case:MockHttpClient",
            "stateVariables": "state",
            "triggers": "generated"
          }
        }
      },
      "result": "VERIFIED"
    }
  ]
}